{
  "openapi": "3.0.3",
  "info": {
    "title": "Renpass.uol",
    "description": "API to manage luxury car rental company",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "GitHub",
    "url": "https://github.com/felixcandido/Renpass.uol"
  },
  "servers": [
    {
      "url": "https://renpass-felix.herokuapp.com/",
      "description": "API - Heroku"
    },
    {
      "url": "http://localhost:3000/",
      "description": "API - localhost"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cpf": {
            "type": "string",
            "minLength": 11,
            "maxLength": 14
          },
          "birthDay": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "canDrive": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "Accessories": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Vehicles": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "year": {
            "type": "number"
          },
          "accessories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Accessories"
            }
          },
          "passengersQtd": {
            "type": "number"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "cep": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "isFilial": {
            "type": "boolean"
          }
        }
      },
      "Rental": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "activities": {
            "type": "string"
          },
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        }
      },
      "Fleet": {
        "type": "object",
        "properties": {
          "id_car": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["available", "unavailable", "rented"]
          },
          "daily_value": {
            "type": "string"
          },
          "plate": {
            "type": "string"
          }  
        }
      },
      "Reserve": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "string"
          },
          "data_start": {
            "type": "string"
          },
          "data_end": {
            "type": "string"
          },  
          "id_car": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/authenticate": {
      "post": {
        "summary": "authenticate user by email and password",
        "tags": [
          "Authenticate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/person": {
      "get": {
        "summary": "Search all people",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cpf",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canDrive",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Person"
                },
                "example": {"people": [
                  {
                      "_id": "62ae73fee9762bc056a9e546",
                      "name": "Joaozinho",
                      "cpf": "013.468.595-15",
                      "birthDay": "21/06/2002",
                      "email": "joazinho@email.com",
                      "canDrive": "yes",
                      "__v": 0
                  },
                  {
                      "_id": "62af96c2349d4221004fc78a",
                      "name": "Yamato",
                      "cpf": "418.873.880-44",
                      "birthDay": "13/05/1998",
                      "email": "joaziho@email.com",
                      "canDrive": "yes",
                      "__v": 0
                  }],
                  "total": 2,
                  "offset": 1,
                  "limit": 100,
                  "offsets": 1
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "register a new person",
        "tags": [
          "Person"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Person"
              },
              "example": {
                "name": "Joaozinho",
                "cpf": "502.227.890-18",
                "birthDay": "22/07/2002",
                "email": "joaziho@email.com",
                "password": "123456",
                "canDrive": "yes"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/person/{id}": {
      "get": {
        "summary": "Search person by id",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Person"
                },
                "example": {
                  "_id": "62ae73fee9762bc056a9e546",
                  "name": "Joaozinho",
                  "cpf": "067.432.124-01",
                  "birthDay": "11/07/2000",
                  "email": "joazinho@hotmail.com",
                  "canDrive": "yes",
                  "__v": 0
              }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "summary": "update register of one person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "summary": "delete register of one person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/car": {
      "get": {
        "summary": "Search all cars",
        "tags": [
          "Car"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessories",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Vehicles"
                },
                "example": {
                  "vehicles": [
                    {
                        "_id": "62a37521a6198003a53407fe",
                        "model": "S10 2.8",
                        "type": "sedan",
                        "brand": "GM",
                        "color": "branco",
                        "year": 2021,
                        "accessories": [
                            {
                                "description": "Ar-condicionado",
                                "_id": "62afcceecd484f0c50165f50"
                            },
                            {
                                "description": "Dir. Hidráulica",
                                "_id": "62afcceecd484f0c50165f51"
                            }
                        ],
                        "passengersQtd": 5,
                        "__v": 0
                    }],

                    "total": 21,
                    "offset": 1,
                    "limit": 100,
                    "offsets": 1
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "register a new car",
        "tags": [
          "Car"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Vehicles"
              },
              "example": {
                "model": "S10 2.8",
                "type": "sedan",
                "brand": "GM",
                "color": "branco",
                "year": "2021",
                "accessories": [
                  {
                    "description": "Ar-condicionado"
                  }
                ],
                "passengersQtd": 5
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Vehicles"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/car/{id}": {
      "get": {
        "summary": "Search car by id",
        "tags": [
          "Car"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Vehicles"
                },
                "example": {
                  "_id": "62afc5409035874a580508d1",
                  "model": "S10 2.8",
                  "type": "sedan",
                  "brand": "GM",
                  "color": "branco",
                  "year": 2021,
                  "accessories": [
                      {
                          "description": "Ar-condicionado",
                          "_id": "62afc5409035874a580508d2"
                      }
                  ],
                  "passengersQtd": 1,
                  "__v": 0
              }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "summary": "update a car",
        "tags": [
          "Car"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Vehicles"
              },
              "example": {
                "model": "S10 2.8"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "delete register of one car",
        "tags": [
          "Car"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/car/{CarId}/accessories/{id}": {
      "patch": {
        "summary": "update registration for a specific accessory",
        "tags": [
          "Car"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "CarId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Accessories"
              },
              "example": {
                "description": "4 portas" 
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/rental": {
      "get": {
        "summary": "Search all rentals",
        "tags": [
          "Rental"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activities",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "street",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "complement",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Rental"
                },
                "example": {
                  "rentals": [
                    {
                        "_id": "62a56e94a6150533a1b5e429",
                        "name": "joaozinho",
                        "cnpj": "18.670.085/0011-55",
                        "activities": "Aluguel de Carros E Gestão de Frotas",
                        "address": [
                            {
                                "zipCode": "47810-178",
                                "street": "Rua Maria Coelho da Cruz",
                                "complement": "",
                                "district": "Morada Nobre",
                                "number": "1234",
                                "city": "Barreiras",
                                "state": "BA",
                                "isFilial": false,
                                "_id": "62a56e94a6150533a1b5e42a"
                            }
                        ],
                        "__v": 0
                    }],
                    "total": 14,
                    "offset": 1,
                    "limit": 100,
                    "offsets": 1
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "register a new rental",
        "tags": [
          "Rental"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Rental"
              },
              "example": {
                "name": "hhh",
                "activities": "Aluguel de Carros E Gestão de Frotas",
                "address": [
                    {
                    "cep": "96200-200",
                    "number":"1234",
                    "isFilial": true
                    }
                ]
                }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Vehicles"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/rental/{id}": {
      "get": {
        "summary": "Search rental by id",
        "tags": [
          "Rental"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "summary": "update a rental",
        "tags": [
          "Rental"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Rental"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "summary": "delete register of one rental",
        "tags": [
          "Rental"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/rental/{rentalId}/fleet": {
        "get": {
          "summary": "Search fleet",
          "tags": [
            "Fleet"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true
            },
            {
              "name": "id_car",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "status",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "daily_value",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/Fleet"
                  },
                  "example": {
                    "fleet": [
                      {
                          "_id": "62b159586cf9706c7567e22f",
                          "id_car": "62a37521a6198003a53407fe",
                          "id_rental": "62ae65ca1e512922d216788d",
                          "status": "available",
                          "daily_value": "190,20",
                          "plate": "ABC146",
                          "__v": 0
                      }
                    ],
                    "total": 2,
                    "offset": 1,
                    "limit": 100,
                    "offsets": 1
                    
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        },
        "post": {
          "summary": "register a new fleet",
          "tags": [
            "Fleet"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Fleet"
                },
                "example": {
                  "id_car": "62a37521a6198003a53407fe",
                  "status": "available",
                  "daily_value": "190,20",
                  "plate": "ABC166"
              }
              }
            }
          },
          "responses": {
            "201": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/Fleet"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/v1/rental/{rentalId}/fleet/{fleetId}": {
        "get": {
          "summary": "Search fleet by id",
          "tags": [
            "Fleet"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fleetId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/Fleet"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "summary": "update register of fleet",
          "tags": [
            "Fleet"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fleetId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Fleet"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "success"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "summary": "delete one register of fleet",
          "tags": [
            "Fleet"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fleetId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "success"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/v1/rental/{rentalId}/reserve": {
        "get": {
          "summary": "Search all reserves",
          "tags": [
            "Reserve"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true
            },
            {
              "name": "data_start",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "data_end",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "final_value",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id_car",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id_user",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/Reserve"
                  },
                  "example": {
                    "reserves": [
                        {
                            "_id": "62b1f8481235f38d6bcc5cbe",
                            "id_user": "62ae65ca1e512922d216788d",
                            "id_rental": "62ae65ca1e512922d216788d",
                            "id_car": "62ae65ca1e512922d216788d",
                            "data_start": "20/11/2021",
                            "data_end": "30/11/2021",
                            "final_value": "500,00",
                            "__v": 0
                        }
                      ],
                      "total": 72,
                      "offset": 1,
                      "limit": 100,
                      "offsets": 1
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        },
        "post": {
          "summary": "register a new Reserve",
          "tags": [
            "Reserve"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Reserve"
                },
                "example": {
                  "id_user": "62ae73fee9762bc056a9e546",
                  "data_start": "20/11/2021",
                  "data_end": "26/11/2021",
                  "id_car": "62b1595e6cf9706c7567e233"
              }
              }
            }
          },
          "responses": {
            "201": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/Reserve"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/v1/rental/{rentalId}/reserve/{reserveId}": {
        "get": {
          "summary": "Search reserve by id",
          "tags": [
            "Reserve"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "reserveId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "$ref": "#/components/schemas/Reserve"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        },
        "patch": {
          "summary": "update a reserve",
          "tags": [
            "Reserve"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "reserveId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Reserve"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "success"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "summary": "delete register of one reserve",
          "tags": [
            "Reserve"
          ],
          "parameters": [
            {
              "name": "rentalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "reserveId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "success"
            },
            "404": {
              "description": "Not Found"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    }
  }